<style>
  /* 전체 스타일 */
  body {
    font-family: 'Arial', sans-serif;
    background-color: #f4f7fc;
    color: #333;
  }

  /* 상단바와 메인 컨텐츠 간 간격 확보 */
  .main {
    margin-top: 7rem;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
  }

  .header-controls {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 90%;
    max-width: 1200px;
    margin-bottom: 2rem;
  }

  .header-controls h1 {
    font-size: 2.5rem;
    text-align: left;
    margin: 0;
    color: #2a5298;
    font-weight: bold;
  }

  .header-controls a.add-log-btn {
    display: inline-block;
    padding: 0.8rem 1.5rem;
    background-color: #1976d2;
    color: white;
    text-decoration: none;
    font-size: 1.1rem;
    border-radius: 8px;
    font-weight: bold;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
    transition: background-color 0.3s ease, transform 0.2s ease;
  }

  .header-controls a.add-log-btn:hover {
    background-color: #005cbf;
    transform: scale(1.05);
  }

  .container {
    width: 90%;
    max-width: 1200px;
    margin: 0 auto;
    text-align: left;
    background: #ffffff;
    padding: 2rem;
    border-radius: 12px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
    overflow-y: auto;
    height: calc(100vh - 8rem);
  }

  ul {
    list-style: none;
    padding: 0;
  }

  ul li {
    margin: 1.5em 0;
    padding: 1.5em;
    border: 1px solid #ddd;
    border-radius: 12px;
    background: #fdfdfd;
    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s, box-shadow 0.3s;
  }

  ul li:hover {
    transform: translateY(-5px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
  }

  .log-header strong {
    font-size: 1.8rem;
    color: #1976d2;
  }

  .posted-on {
    font-size: 0.95rem;
    color: #555;
    text-align: right;
  }

  strong {
    display: block;
    font-size: 1.2rem;
    color: #333;
    margin-bottom: 0.5rem;
  }

  p {
    margin: 0.5rem 0;
    font-size: 1rem;
    color: #555;
  }

  img {
    display: block;
    margin: 1rem auto;
    border-radius: 8px;
    width: 80%;
    max-width: 500px;
    height: auto;
  }

  /* 댓글 스타일 */
  .comments-section {
    margin-top: 1rem;
    padding: 1rem;
    background-color: #eaf3ff;
    border-radius: 8px;
  }

  .comments-section h3 {
    font-size: 1.5rem;
    color: #1976d2;
    margin-bottom: 1rem;
  }

  .comment {
    position: relative;
    padding: 0.8rem;
    margin-bottom: 0.8rem;
    border-bottom: 1px solid #ddd;
    transition: opacity 0.3s ease, transform 0.3s ease;
    color: #444;
  }

  .comment.removing {
    opacity: 0;
    transform: translateY(-10px);
  }

  .comment strong {
    color: #1976d2;
    font-size: 1rem;
  }

  .comment-form {
    display: flex;
    gap: 1rem;
    margin-top: 1rem;
  }

  .comment-form input {
    flex: 1;
    padding: 0.8rem;
    border: 1px solid #ccc;
    border-radius: 6px;
    font-size: 1rem;
  }

  .comment-form button {
    padding: 0.6rem 1.2rem;
    font-size: 1rem;
    background-color: #1976d2;
    color: white;
    border: none;
    border-radius: 6px;
    cursor: pointer;
  }

  .comment-form button:hover {
    background-color: #005cbf;
  }
</style>
>

<main class="main">
  <div class="header-controls">
    <h1>All Workout Logs</h1>
    <a href="/home/workout-log/new" class="add-log-btn">Add New Workout Log</a>
  </div>

  <div class="container">
    <% if (logs.length === 0) { %>
    <p class="no-logs">No workout logs found.</p>
    <% } else { %>
    <ul>
      <% logs.forEach((log) => { %>
      <li>
        <div class="log-header">
          <strong><%= log.title %></strong>
          <span class="posted-on"
            >Posted On: <%= new Date(log.createdAt).toLocaleString() %></span
          >
        </div>
        <p><strong>by <%= log.username %></strong></p>
        <p>
          Exercise: <%= log.exercise %>, Duration: <%= log.duration %> minutes
        </p>
        <p>Date: <%= log.date.toDateString() %></p>
        <p>Description: <%= log.description %></p>
        <% if (log.image) { %>
        <img src="/uploads/<%= log.image %>" alt="Workout Image" />
        <% } %> <% if (user.role === 'admin' || user.username === log.username)
        { %>
        <div class="btn-group">
          <form
            action="/home/workout-log/<%= log._id %>/delete"
            method="POST"
            style="display: inline"
          >
            <button type="submit" class="btn">Delete</button>
          </form>
          <a href="/home/workout-log/<%= log._id %>/edit" class="btn">Edit</a>
        </div>
        <% } %>

        <!-- 댓글 섹션 -->
        <div class="comments-section">
          <h3>Comments:</h3>
          <div id="comments-<%= log._id %>">
            <% log.comments.forEach((comment) => { %>
            <div class="comment" id="comment-<%= comment._id %>">
              <strong><%= comment.username %></strong> - <%= new
              Date(comment.date).toLocaleString() %>
              <p><%= comment.text %></p>
              <% if (user.role === 'admin' || user.username ===
              comment.username) { %>
              <button
                class="btn edit-comment-btn"
                data-log-id="<%= log._id %>"
                data-comment-id="<%= comment._id %>"
              >
                Edit
              </button>
              <button
                class="btn delete-comment-btn"
                data-log-id="<%= log._id %>"
                data-comment-id="<%= comment._id %>"
              >
                Delete
              </button>
              <% } %>
            </div>
            <% }); %>
          </div>
          <form class="comment-form" data-log-id="<%= log._id %>">
            <input
              type="text"
              name="text"
              placeholder="Add a comment..."
              required
            />
            <button type="submit">Add</button>
          </form>
        </div>
      </li>
      <% }); %>
    </ul>
    <% } %>
  </div>
</main>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // 댓글 추가
    document.querySelectorAll('.comment-form').forEach((form) => {
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        const logId = form.dataset.logId;
        const text = form.querySelector("input[name='text']").value;

        const response = await fetch(`/home/workout-log/${logId}/comments`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ text }),
        });

        if (response.ok) {
          const { comment } = await response.json();
          const commentsContainer = document.getElementById(
            `comments-${logId}`
          );
          commentsContainer.innerHTML += `
          <div class="comment" id="comment-${comment._id}">
            <strong>${comment.username}</strong> - ${new Date(
            comment.date
          ).toLocaleString()}
            <p>${comment.text}</p>
            <button class="btn edit-comment-btn" data-log-id="${logId}" data-comment-id="${
            comment._id
          }">Edit</button>
            <button class="btn delete-comment-btn" data-log-id="${logId}" data-comment-id="${
            comment._id
          }">Delete</button>
          </div>
        `;
        }
      });
    });

    // 댓글 삭제
    document.addEventListener('click', async (e) => {
      if (e.target.classList.contains('delete-comment-btn')) {
        const logId = e.target.dataset.logId;
        const commentId = e.target.dataset.commentId;

        try {
          const response = await fetch(
            `/home/workout-log/${logId}/comments/${commentId}`,
            {
              method: 'DELETE',
            }
          );

          if (response.ok) {
            const commentElement = document.getElementById(
              `comment-${commentId}`
            );
            if (commentElement) {
              commentElement.classList.add('removing');
              setTimeout(() => commentElement.remove(), 300);
            }
          } else {
            const error = await response.json();
            console.error('Delete failed:', error.error);
            alert('Failed to delete comment. Please try again.');
          }
        } catch (err) {
          console.error('Network error:', err);
          alert('Network error while deleting comment.');
        }
      }
    });

    // 댓글 수정
    document.addEventListener('click', async (e) => {
      if (e.target.classList.contains('edit-comment-btn')) {
        const logId = e.target.dataset.logId;
        const commentId = e.target.dataset.commentId;
        const commentElement = document.getElementById(`comment-${commentId}`);
        const currentText = commentElement.querySelector('p').textContent;

        const newText = prompt('Edit your comment:', currentText);
        if (newText && newText !== currentText) {
          const response = await fetch(
            `/home/workout-log/${logId}/comments/${commentId}`,
            {
              method: 'PATCH',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ text: newText }),
            }
          );

          if (response.ok) {
            const { comment } = await response.json();
            // DOM 업데이트
            commentElement.querySelector('p').textContent = comment.text;
            commentElement.querySelector(
              'strong'
            ).nextSibling.textContent = ` - ${new Date(
              comment.date
            ).toLocaleString()}`;
          } else {
            alert('Failed to update comment. Please try again.');
          }
        }
      }
    });
  });
</script>
