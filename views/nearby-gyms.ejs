<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Nearby Gyms | FitConnect</title>
    <link rel="stylesheet" href="/styles.css" />
    <style>
      body {
        background: linear-gradient(to bottom, #2c3e50, #4ca1af);
        color: #fff;
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
      }

      header {
        text-align: center;
        padding: 1rem;
        background: #007bff;
        color: white;
        font-size: 1.5rem;
      }

      main {
        display: flex;
        width: 95%;
        height: calc(100vh - 120px);
        margin: 1rem auto;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        background: #ffffff;
        border-radius: 8px;
        overflow: hidden;
      }

      #gym-list {
        flex: 0 0 40%;
        overflow-y: auto;
        background: #f9f9f9;
        padding: 1rem;
        border-right: 1px solid #ddd;
        box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.05);
      }

      .gym-card {
        background-color: #fff;
        margin-bottom: 1rem;
        padding: 1rem;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s;
      }

      .gym-card:hover {
        transform: scale(1.05);
      }

      .gym-card h2 {
        font-size: 1rem;
        margin-bottom: 0.5rem;
      }

      .gym-card p {
        font-size: 0.9rem;
        margin: 0.2rem 0;
      }

      #map {
        flex: 0 0 60%;
        height: 100%;
      }
    </style>
  </head>
  <body>
    <header>
      <h1>Nearby Gyms</h1>
    </header>
    <main>
      <div id="gym-list"></div>
      <div id="map"></div>
    </main>

    <script
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCR_YT9dN3ei0ZBsiui-9UX8Vj6POVYEHQ&callback=initMap"
      async
      defer
    ></script>
    <script>
      let map;

      function initMap() {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(
            (position) => {
              const userLocation = {
                lat: position.coords.latitude,
                lng: position.coords.longitude,
              };

              console.log('User Location:', userLocation);

              map = new google.maps.Map(document.getElementById('map'), {
                zoom: 14,
                center: userLocation,
              });

              new google.maps.Marker({
                position: userLocation,
                map: map,
                title: 'Your Location',
                icon: {
                  url: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png',
                },
              });

              const searchRadius = new google.maps.Circle({
                map: map,
                center: userLocation,
                radius: 5000,
                fillColor: '#007bff',
                fillOpacity: 0.1,
                strokeColor: '#007bff',
                strokeOpacity: 0.5,
              });

              fetchNearbyGyms(userLocation);
            },
            (error) => {
              console.error('Geolocation error:', error);
              alert('Location access denied. Showing default location.');
            }
          );
        } else {
          alert('Geolocation is not supported by this browser.');
        }
      }

      function fetchNearbyGyms(location) {
        const { lat, lng } = location;
        const requestUrl = `/home/api/nearby-gyms?lat=${lat}&lng=${lng}`;
        console.log('Request URL:', requestUrl);

        fetch(requestUrl)
          .then((response) => {
            if (!response.ok) {
              throw new Error(`HTTP error! Status: ${response.status}`);
            }
            return response.json();
          })
          .then((gyms) => {
            console.log('Gyms Data:', gyms); // API 응답 데이터 확인
            gyms.sort((a, b) => (b.rating || 0) - (a.rating || 0));
            displayGyms(gyms);
            addMarkersToMap(gyms);
          })
          .catch((error) => console.error('Error fetching gyms:', error));
      }

      function displayGyms(gyms) {
        const gymList = document.getElementById('gym-list');
        if (!gyms || gyms.length === 0) {
          gymList.innerHTML = '<p>No gyms found nearby.</p>';
          return;
        }

        gymList.innerHTML = gyms
          .map((gym) => {
            console.log('Gym Data:', gym); // 각 헬스장 데이터 확인
            if (gym.name && gym.vicinity) {
              return `
                <div class="gym-card">
                  <h2>${gym.name}</h2>
                  <p>${gym.vicinity}</p>
                  ${
                    gym.rating
                      ? `<p>Rating: ${gym.rating} ⭐</p>`
                      : '<p>No rating available</p>'
                  }
                </div>
              `;
            } else {
              console.warn('Incomplete Gym Data:', gym);
              return '<div class="gym-card"><p>Data unavailable</p></div>';
            }
          })
          .join('');
      }

      function addMarkersToMap(gyms) {
        gyms.forEach((gym) => {
          console.log('Adding Marker for:', gym.name); // 마커 디버깅
          const marker = new google.maps.Marker({
            position: {
              lat: gym.geometry.location.lat,
              lng: gym.geometry.location.lng,
            },
            map: map,
            title: gym.name,
          });

          const infoWindow = new google.maps.InfoWindow({
            content: `<div>
              <h2>${gym.name}</h2>
              <p>${gym.vicinity}</p>
              ${
                gym.rating
                  ? `<p>Rating: ${gym.rating} ⭐</p>`
                  : '<p>No rating available</p>'
              }
            </div>`,
          });

          marker.addListener('click', () => {
            infoWindow.open(map, marker);
          });
        });
      }
    </script>
  </body>
</html>
