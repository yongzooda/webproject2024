<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Chat Room</title>
    <link rel="stylesheet" href="/styles.css" />
    <script src="/socket.io/socket.io.js"></script>
    <style>
      .message {
        margin: 5px 10px;
        padding: 10px;
        max-width: 70%;
        word-wrap: break-word;
        border-radius: 10px;
      }

      .message.user {
        align-self: flex-end;
        background-color: #daf7a6;
        color: black;
        text-align: right;
      }

      .message.other {
        align-self: flex-start;
        background-color: #f1f1f1;
        color: black;
        text-align: left;
      }

      .message-timestamp {
        font-size: 10px;
        color: #888;
        margin-top: 5px;
      }

      .chat-box {
        display: flex;
        flex-direction: column;
        overflow-y: auto;
        padding: 20px;
        background-color: #f9f9f9;
        height: 500px;
        border: 1px solid #ddd;
        border-radius: 5px;
      }

      .chat-input {
        display: flex;
        gap: 10px;
        padding: 10px;
        border-top: 1px solid #ddd;
      }

      .chat-input input {
        flex: 1;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
      }

      .chat-input button {
        padding: 10px 20px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
      }

      .chat-input button:hover {
        background-color: #0056b3;
      }
    </style>
  </head>
  <body>
    <% include partials/header %>
    <div class="chat-room">
      <header>
        Chat with <%= chatRoom.participants.find((p) => p !== user.username) %>
      </header>
      <div class="chat-box" id="chat-box">
        <% chatRoom.messages.forEach((msg) => { %>
        <div
          class="message <%= msg.sender === user.username ? 'user' : 'other' %>"
        >
          <strong
            ><%= msg.sender === user.username ? 'You' : msg.sender %>:</strong
          >
          <%= msg.message %>
          <div class="message-timestamp">
            <%= new Date(msg.timestamp).toLocaleTimeString() %>
          </div>
        </div>
        <% }); %>
      </div>
      <form id="chat-form" class="chat-input">
        <input
          type="text"
          id="message-input"
          placeholder="Type your message..."
          required
        />
        <button type="submit">Send</button>
      </form>
    </div>
    <script>
      const socket = io({
        auth: {
          token: '<%= token %>', // EJS에서 서버에서 생성한 JWT를 삽입
        },
      });

      const roomId = '<%= chatRoom.roomId %>'; // 방 ID
      const username = '<%= user.username %>'; // 사용자 이름
      const chatBox = document.getElementById('chat-box');
      const messageInput = document.getElementById('message-input');

      // 방 참여
      socket.emit('join room', { roomId, username });

      // 스크롤을 맨 아래로 이동하는 함수
      const scrollToBottom = () => {
        chatBox.scrollTop = chatBox.scrollHeight;
      };

      // 페이지 로드 후 스크롤 아래로 이동
      window.onload = scrollToBottom;

      // 메시지 전송
      document.getElementById('chat-form').addEventListener('submit', (e) => {
        e.preventDefault();
        const message = messageInput.value.trim();
        if (message) {
          socket.emit('chat message', {
            roomId,
            sender: username, // 현재 사용자 이름
            message,
          });
          messageInput.value = ''; // 입력창 초기화
        }
      });

      // 새 메시지 수신
      socket.on('chat message', ({ sender, message }) => {
        console.log('Message received on client:', { sender, message });
        const messageElement = document.createElement('div');
        messageElement.className =
          sender === username ? 'message user' : 'message other';
        messageElement.innerHTML = `<strong>${
          sender === username ? 'You' : sender
        }:</strong> ${message}`;
        chatBox.appendChild(messageElement);
        scrollToBottom(); // 스크롤 아래로 이동
      });
    </script>
  </body>
</html>
